---

### Get VPC ID
- name: "Get PROD VPC ID"
  ec2_vpc_net_facts:
    filters:
      "tag:Name": PROD
  register: aws_prod_vpc_id


- name: "Get DEV VPC ID"
  ec2_vpc_net_facts:
    filters:
      "tag:Name": DEV
  register: aws_dev_vpc_id


- name: "Get PEER VPC ID"
  ec2_vpc_net_facts:
    filters:
      "tag:Name": PEER
  register: aws_peer_vpc_id


# Setup peering between the peering vpc and the live VPC (which are in the same account)
- name: Create VPC peering Connection between peering VPC and Live VPC
  ec2_vpc_peer:
    region: "{{ aws_common_region }}"
    vpc_id: "{{ aws_peer_vpc_id.vpcs.0.vpc_id }}"
    peer_vpc_id: "{{ aws_prod_vpc_id.vpcs.0.vpc_id }}"
    state: present
    tags:
      Name: 'VPC-PERR-PROD'
      Ansible: "Ansible"
  register: vpc_peer_prod


- name: Accept VPC peering Connection between peering VPC and PROD VPC
  ec2_vpc_peer:
    region: "{{ aws_common_region }}"
    peering_id: "{{ vpc_peer_prod.peering_id }}"
    state: accept
    tags:
      Name: 'VPC-PERR-PROD'
      Ansible: "Ansible"
  register: action_peer_prod


- name: Create VPC peering Connection between peering VPC and DEV VPC
  ec2_vpc_peer:
    region: "{{ aws_common_region }}"
    vpc_id: "{{ aws_peer_vpc_id.vpcs.0.vpc_id }}"
    peer_vpc_id: "{{ aws_dev_vpc_id.vpcs.0.vpc_id }}"
    state: present
    tags:
      Name: 'VPC-PERR-DEV'
      Ansible: "Ansible"
  register: vpc_peer_dev


- name: Accept VPC peering Connection between peering VPC and DEV VPC
  ec2_vpc_peer:
    region: "{{ aws_common_region }}"
    peering_id: "{{ vpc_peer_dev.peering_id }}"
    state: accept
    tags:
      Name: 'VPC-PERR-DEV'
      Ansible: "Ansible"
  register: action_peer_dev
